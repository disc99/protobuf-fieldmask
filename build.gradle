plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.google.protobuf" version "0.9.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor "org.projectlombok:lombok"
	implementation "org.projectlombok:lombok"

	implementation 'io.projectreactor:reactor-core'


	implementation 'io.github.lognet:grpc-spring-boot-starter:5.0.0'
	implementation 'io.grpc:grpc-all:1.53.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.google.protobuf:protobuf-java:3.21.12'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
	protoc {
		// The artifact spec for the Protobuf Compiler
		artifact = 'com.google.protobuf:protoc:3.22.0-RC3:osx-x86_64'
	}
	plugins {
		// Optional: an artifact spec for a protoc plugin, with "grpc" as
		// the identifier, which can be referred to in the "plugins"
		// container of the "generateProtoTasks" closure.
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.53.0:osx-x86_64'
		}
	}
	generateProtoTasks {
		ofSourceSet('main').configureEach {
			plugins {
				// Apply the "grpc" plugin whose spec is defined above, without
				// options.  Note the braces cannot be omitted, otherwise the
				// plugin will not be added. This is because of the implicit way
				// NamedDomainObjectContainer binds the methods.
				grpc { }
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
